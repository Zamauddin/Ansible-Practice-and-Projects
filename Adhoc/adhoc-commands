----------------------ansible----------------
What is Ansible?

Ansible is an open source, command-line IT automation software application written in Python. It can configure systems, deploy software, and orchestrate advanced workflows to support application deployment, system updates, and more. Ansible's main strengths are simplicity and ease of use.

#How Ansible works?

In Ansible, there are two categories of computers: the control node and managed nodes. The control node is a computer that runs Ansible. There must be at least one control node, although a backup control node may also exist. A managed node is any device being managed by the control node.
sudo yum update -y

sudo yum install ansible -y

log in to main server (Ansible)
=================================
# Connection process (SSH)
===================================
generate keys 
ssh-keygen --copy public ip(id_rsa.pub) and paste it into target server path .ssh/authorizedkeys

so now Ansible server able to ping target server 

======================================
# Inventory File Process
=======================================
What is Inventory File?

Inventory defines the managed nodes you automate, with groups so you can run automation tasks on multiple hosts at the same time
Create our own inventory file vi inventory and add target private ips

or 

We can add target private ips into defualt path of inventory fiel

path--- vi /etc/ansible/hosts


===============================
Ad-hoc commands 
=============================



-# sample ad-hoc coomand -------------------

Ad-hoc commands are commands which can be run individually to perform quick functions


###### Ansible ad-hoc commands ##################

 
ansible -i inventory all -a "yum install git -y" -b  # this command is to define our own path inventory 
ansible all -a "yum install git -y" -b  # this command is for deaflt path of inventory so no need to give "-i inventory argument"

here '-b' is beacome a root 

      '-a' is ad-hoc argument 
      'all' is apply for all hosts # we can replace with all if we want to call sepcific ip

Example
[web]
192.168.1.2
[test]
192.168.1.3

  if i want to run any adhoc command give below example 

  # ansible web -a "yum install git -y" -b


Exampes: 
ansible -i inventory all -a "yum install maven -y" -b # with define inventory 

ansible -all -a "git --version" -b #default inventory

ansible -i inventory all -a "touch file100" -b


####### Ansible Module ##########
Ansible modules are units of code that can control system resources or execute system commands. Ansible provides a module library that you can execute directly on remote hosts or through playbooks. You can also write custom modules.


----ping module-------
ansible -i inventory all -m ping 

-----stat module ----
ansible -i inventory all -m stat -a "path=/var/www/html"

----------user----------

ansible -i inventory all -m user -a "name=naresh" -b

-----------setup--------
ansible -i inventory all -m setup

---------------file------------
ansible -i inventory all -m file -a "name=demo state=touch"

---------------copy-------------
ansible -i inventory all -m copy -a "src=file1  dest=~"
----------------------

------yum or apt module ----- ##Very ImP

(basic state's
name = (httpd install)
               state=latest
               state=present
               state=absent )

ansible all -m yum -a "name=httpd state=latest" -b
ansible all -m yum -a "name=httpd state=present" -b
ansible all -m yum -a "name=httpd state=absent" -b

(name = systemctl or service              
               state=stopped
               state= started
               state=restrted
               state= absent)


Examples :
ansible -i inventory all -m yum -a "name=httpd state=latest" -b     #to install httpd

ansible -i inventory all -m service -a "name=httpd state=started" -b     #to start service

ansible -i inventory all -m service -a "name=httpd state=stopped" -b     #to stop service

ansible -i inventory all -m yum -a "name=httpd state=absent" -b     #to uninstall service

ansible -i inventory all -m service -a "name=httpd state=restarted" -b     #to restart service

===================== Host Key verification put false by default it is true  ================

sudo vi /etc/ansible/ansible.cfg #create config file

[defaults]
host_key_checking = False